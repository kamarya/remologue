#!/bin/sh

set -e

OPTION=$1

PLATFORM=`uname`

# function
function usage() {
    echo $0 [run\|pack\|clean]
}

# function
function download_json_org {
	curl -OL https://github.com/stleary/JSON-java/archive/20171018.tar.gz
	tar -xvf 20171018.tar.gz
	mkdir -p src/org/json
	mv JSON-java-20171018/*.java src/org/json/
	rm -rf JSON-java-20171018
	rm -f 20171018.tar.gz
}

# function
function check_jre_jdk() {
    if type -p java; then
        _java=java
    elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
        _java="$JAVA_HOME/bin/java"
    else
        echo 'could not find Java Runtime Environment (JRE)'
        exit
    fi

    if type -p javac; then
        _javac=javac
    elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/javac" ]];  then
        _javac="$JAVA_HOME/bin/javac"
    else
        echo 'could not find Java Development Kit (JDK).'
        exit
    fi

    if [[ "$_javac" ]]; then
        javac_ver=$("$_javac" -version 2>&1 | awk '/javac/ {print $2}')
        echo javac version "$javac_ver"
        if [[ ! "$javac_ver" > "1.8.0" ]]; then
            echo 'you need JDK 1.8 or later to build this software.'
            exit
        fi
    fi

    if [[ "$_java" ]]; then
        java_ver=$("$_java" -version 2>&1 | awk -F '"' '/version/ {print $2}')
        echo java version "$java_ver"
        if [[ ! "$java_ver" > "1.8.0" ]]; then
            echo 'you need JRE 1.8 or later to run this software.'
            exit
        fi
    fi
}

# function
function clean_build_all() {
    rm -rf build
    mkdir -p ./build
    cd src
    javac -d ../build Remologue.java -Xlint
    cd ../build
    jar cvfe Remologue.jar Remologue .
    cp -R ../resources .
    cp ../.remologue ../resources/json/settings.json
    cd resources
    zip -ur ../Remologue.jar image
    zip -ur ../Remologue.jar json
    zip -ur ../Remologue.jar css
    cd ..
}

# function
function macos_icns() {
    cp resources/image/icon.png Remologue.png
    mkdir Remologue.iconset
    sips -z 512 512 Remologue.png --out Remologue.iconset/icon_512x512.png
    iconutil --convert icns Remologue.iconset
    mkdir -p package/macosx
    cp Remologue.icns package/macosx
}

# function
function macos_pack() {
    JAVA_HOME=`/usr/libexec/java_home -v 1.8`
    APP_DIR_NAME=Remologue.app

    javapackager \
      -deploy \
      -Bruntime=${JAVA_HOME} \
      -Bicon=package/macosx/Remologue.icns \
      -native image \
      -srcdir . \
      -srcfiles Remologue.jar \
      -outdir deploy \
      -outfile ${APP_DIR_NAME} \
      -appclass Remologue \
      -name "Remologue" \
      -title "Remologue" \
      -vendor "Remologue" \
      -nosign \
      -v
}

if [ -z $OPTION ];then
    echo the script option is missing.
    usage
    exit
fi

if [ "$OPTION" == "clean" ];then
    echo \'build\' has been removed.
    rm -rf build
    exit
fi

if [[ ! -d src/org/json ]];then
	download_json_org
fi

check_jre_jdk
clean_build_all

# post compilation actions
if [ "$OPTION" == "pack" ];then
    if [ "$PLATFORM" == "Darwin" ]; then
      echo MacOS bundle will be created.
      macos_icns
      macos_pack
    else
      echo $PLATFORM is not supported yet.
    fi
fi

if [ "$OPTION" == "run" ];then
    cd ..
    cp .remologue ~/
    java -jar build/Remologue.jar & disown
fi
